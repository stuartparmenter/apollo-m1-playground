substitutions:
  name: "apollo-m1-r6"
  friendly_name: "Apollo M-1"

  # ===== Display / Panel =====
  display_panel_width: 64
  display_panel_height: 64
  display_layout: HORIZONTAL
  display_layout_rows: 1
  display_layout_cols: 1
  display_scan_wiring: STANDARD_TWO_SCAN

  DISPLAY_W: ${display_panel_width * display_layout_cols}
  DISPLAY_H: ${display_panel_height * display_layout_rows}

  # Note: some variables need to be configured at the page level down below

esphome:
  name: "${name}"
  friendly_name: "${friendly_name}"
  name_add_mac_suffix: true
  project:
    name: stuartparmenter.hub75-studio
    version: dev # This will be replaced by the github workflows with the `release` version

logger:

api:

wifi:
  power_save_mode: none
  ap:
  on_connect:
    - delay: 5s  # Gives time for improv results to be transmitted
    - ble.disable:

captive_portal:

web_server:
  version: 3

# This should point to the public location of the yaml file that will be adopted.
# In this case it is the core yaml file that does not contain the extra things
# that are provided by this factory yaml file as the user does not need these once adopted.
dashboard_import:
  package_import_url: github://stuartparmenter/hub75-studio/apollo-automation-m1-rev6.yaml@main
  import_full_config: true

# Sets up Bluetooth LE (Only on ESP32) to allow the user
# to provision wifi credentials to the device.
esp32_improv:
  authorizer: none

# Sets up the improv via serial client for Wi-Fi provisioning.
# Handy if your device has a usb port for the user to add credentials when they first get it.
improv_serial:

# Used to pull OTA updates
http_request:

ota:
  - platform: http_request
  - platform: esphome

update:
  - platform: http_request
    name: Firmware
    source: https://github.com/stuartparmenter/hub75-studio/releases/latest/download/apollo-automation-m1-rev6.manifest.json

packages:
  # Sets minimum supported ESPHome version
  esphome_version: !include packages/common/esphome-version.yaml

  # Base board/pins, LVGL root, services, etc.
  controller: !include
    file: packages/controllers/apollo-automation-m1-rev6.yaml
    vars:
      panel_width: ${display_panel_width}
      panel_height: ${display_panel_width}
      layout: ${display_layout}
      layout_rows: ${display_layout_rows}
      layout_cols: ${display_layout_cols}
      scan_wiring: ${display_scan_wiring}

  # Shared helpers, sensors, buttons
  utils: !include packages/common/utils.yaml

  # Shared fonts and LVGL styles
  theme: !include packages/common/theme.yaml

  # Shared DDP and DDP websocket control config
  # Note: This is required by "Now Playing" and the "DDP Stream" pages
  ddp: !include
    file: packages/common/ddp.yaml
    vars:
      ddp_port: "4048"
      ws_ddp_host: "homeassistant.local"
      ws_ddp_port: "8788"
      device_id: "${name}"

  # Basic Boot Screen to avoid flashing or things not being ready yet
  bios: !include packages/pages/bios.yaml

  # Simple clock page
  clock: !include
    file: packages/pages/clock.yaml
    vars:
      page_friendly_name: "Clock"

  # Page that uses lvgl-canvas-fx to render various effects (and change which in HA)
  fx: !include
    file: packages/pages/fx.yaml
    vars:
      page_friendly_name: "Visual Effects"

  # Page that uses lvgl-canvas-fx to render audio from the microphone as audio spectrum bars
  audio_spectrum: !include
    file: packages/pages/audio-spectrum.yaml
    vars:
      page_friendly_name: "Audio Spectrum"

  # A classic
  pong: !include
    file: packages/pages/pong.yaml
    vars:
      page_friendly_name: "Pong"

  # DDP display target (stream id 1 -- for LedFx, etc)
  ddp_receiver: !include
    file: packages/pages/ddp-receiver.yaml
    vars:
      page_friendly_name: "DDP Display"
      back_buffers: 2

  # Media Proxy controlled DDP video streaming
  ddp_stream: !include
    file: packages/pages/ddp-stream.yaml
    vars:
      page_friendly_name: "Media Stream"
      back_buffers: 2
      default_video_src: "https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4"
